// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PaperSquare.Data.Data;

#nullable disable

namespace PaperSquare.Data.Migrations
{
    [DbContext(typeof(PaperSquareDbContext))]
    [Migration("20230417201928_DatabaseSeed")]
    partial class DatabaseSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "642e7f53-0381-4651-833b-f0d9d53d0e4d",
                            ConcurrencyStamp = "75fabf07-07a8-4ed0-b480-bfb7953b5fd6",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "3589c061-1c60-43ff-ae06-5da838058dee",
                            ConcurrencyStamp = "41126c3d-4044-4f0c-bc81-9d7f60389ac8",
                            Name = "RegisteredUser",
                            NormalizedName = "REGISTEREDUSER"
                        },
                        new
                        {
                            Id = "4ded5da6-4674-41cf-a83c-74fe04d869bb",
                            ConcurrencyStamp = "a51dee12-0345-402c-8c9b-7b81147f6605",
                            Name = "Editor",
                            NormalizedName = "EDITOR"
                        },
                        new
                        {
                            Id = "3f5e5a7f-cff6-49a8-b615-9391572b313c",
                            ConcurrencyStamp = "3f3c5af8-e9c3-45ba-87bd-9fc3e2b3f134",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        });
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "2550335c-068d-491a-ae46-8b0064199ea1",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1971, 12, 9, 1, 30, 8, 78, DateTimeKind.Unspecified).AddTicks(294),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2011, 10, 7, 17, 20, 12, 716, DateTimeKind.Unspecified).AddTicks(5722),
                            Email = "Jeffery_Hartmann24@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Jeffery",
                            IsDeleted = true,
                            Lastname = "Hartmann",
                            LockoutEnabled = false,
                            NormalizedEmail = "JEFFERY_HARTMANN24@HOTMAIL.COM",
                            NormalizedUserName = "JEFFERY_HARTMANN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Jeffery_Hartmann"
                        },
                        new
                        {
                            Id = "3e5ab3a2-b627-437a-a13b-6b5cf131c911",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1972, 4, 8, 7, 41, 9, 465, DateTimeKind.Unspecified).AddTicks(100),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2018, 7, 30, 12, 53, 26, 125, DateTimeKind.Unspecified).AddTicks(9824),
                            Email = "Adah_Lockman@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Adah",
                            IsDeleted = false,
                            Lastname = "Lockman",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADAH_LOCKMAN@YAHOO.COM",
                            NormalizedUserName = "ADAH_LOCKMAN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Adah_Lockman"
                        },
                        new
                        {
                            Id = "964dd0dc-31cc-4a0a-b4a5-cdbb06893899",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1973, 6, 24, 15, 8, 38, 549, DateTimeKind.Unspecified).AddTicks(5328),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2019, 1, 22, 21, 51, 55, 602, DateTimeKind.Unspecified).AddTicks(272),
                            Email = "Blanca7@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Blanca",
                            IsDeleted = false,
                            Lastname = "Green",
                            LockoutEnabled = false,
                            NormalizedEmail = "BLANCA7@YAHOO.COM",
                            NormalizedUserName = "BLANCA_GREEN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Blanca_Green"
                        },
                        new
                        {
                            Id = "f7bc439c-8551-45fd-aba9-7d99b4219f36",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1978, 7, 25, 6, 14, 18, 825, DateTimeKind.Unspecified).AddTicks(9913),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2016, 7, 29, 7, 18, 53, 218, DateTimeKind.Unspecified).AddTicks(1106),
                            Email = "Gunner_Hand55@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Gunner",
                            IsDeleted = false,
                            Lastname = "Hand",
                            LockoutEnabled = false,
                            NormalizedEmail = "GUNNER_HAND55@YAHOO.COM",
                            NormalizedUserName = "GUNNER_HAND",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Gunner_Hand"
                        },
                        new
                        {
                            Id = "cf33fd83-c484-4fb4-9b73-a85c2a20e232",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1993, 6, 2, 15, 51, 3, 566, DateTimeKind.Unspecified).AddTicks(7650),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2018, 1, 21, 1, 37, 19, 771, DateTimeKind.Unspecified).AddTicks(8484),
                            Email = "Hank_Altenwerth97@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Hank",
                            IsDeleted = true,
                            Lastname = "Altenwerth",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANK_ALTENWERTH97@GMAIL.COM",
                            NormalizedUserName = "HANK_ALTENWERTH",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Hank_Altenwerth"
                        },
                        new
                        {
                            Id = "c0dfc08e-a6d1-4700-9784-c60d8f1efdbb",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1978, 2, 1, 18, 47, 51, 457, DateTimeKind.Unspecified).AddTicks(2742),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2018, 6, 18, 18, 28, 34, 41, DateTimeKind.Unspecified).AddTicks(4941),
                            Email = "Opal_Herzog46@hotmail.com",
                            EmailConfirmed = true,
                            Firstname = "Opal",
                            IsDeleted = false,
                            Lastname = "Herzog",
                            LockoutEnabled = false,
                            NormalizedEmail = "OPAL_HERZOG46@HOTMAIL.COM",
                            NormalizedUserName = "OPAL_HERZOG",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Opal_Herzog"
                        },
                        new
                        {
                            Id = "5695cd4b-9832-4fab-8eef-497cb93bec68",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1992, 4, 20, 18, 50, 17, 490, DateTimeKind.Unspecified).AddTicks(6464),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2015, 8, 6, 2, 37, 48, 501, DateTimeKind.Unspecified).AddTicks(4784),
                            Email = "Kelley_Boehm88@yahoo.com",
                            EmailConfirmed = false,
                            Firstname = "Kelley",
                            IsDeleted = false,
                            Lastname = "Boehm",
                            LockoutEnabled = false,
                            NormalizedEmail = "KELLEY_BOEHM88@YAHOO.COM",
                            NormalizedUserName = "KELLEY_BOEHM",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Kelley_Boehm"
                        },
                        new
                        {
                            Id = "f1e6b85f-1dab-4efa-b735-71bdf38963e0",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1994, 11, 17, 15, 31, 28, 611, DateTimeKind.Unspecified).AddTicks(4040),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2015, 2, 11, 20, 53, 17, 528, DateTimeKind.Unspecified).AddTicks(8472),
                            Email = "Wilson.Renner56@hotmail.com",
                            EmailConfirmed = true,
                            Firstname = "Wilson",
                            IsDeleted = true,
                            Lastname = "Renner",
                            LockoutEnabled = false,
                            NormalizedEmail = "WILSON.RENNER56@HOTMAIL.COM",
                            NormalizedUserName = "WILSON_RENNER",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Wilson_Renner"
                        },
                        new
                        {
                            Id = "4382aafd-e084-4889-b4d4-23224fdd8cf0",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2000, 3, 30, 4, 50, 18, 451, DateTimeKind.Unspecified).AddTicks(2456),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2019, 4, 19, 1, 43, 50, 896, DateTimeKind.Unspecified).AddTicks(977),
                            Email = "Addie_Cummings@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Addie",
                            IsDeleted = true,
                            Lastname = "Cummings",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADDIE_CUMMINGS@HOTMAIL.COM",
                            NormalizedUserName = "ADDIE_CUMMINGS",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Addie_Cummings"
                        },
                        new
                        {
                            Id = "085f3d5f-7d3e-4500-8709-400c19fd5810",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1971, 5, 24, 5, 17, 50, 710, DateTimeKind.Unspecified).AddTicks(5228),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2014, 9, 15, 17, 49, 4, 714, DateTimeKind.Unspecified).AddTicks(435),
                            Email = "Caleb76@yahoo.com",
                            EmailConfirmed = false,
                            Firstname = "Caleb",
                            IsDeleted = false,
                            Lastname = "Parisian",
                            LockoutEnabled = false,
                            NormalizedEmail = "CALEB76@YAHOO.COM",
                            NormalizedUserName = "CALEB_PARISIAN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Caleb_Parisian"
                        },
                        new
                        {
                            Id = "ca500cf5-44ba-4cc0-85c7-58dd000c252a",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1960, 1, 28, 2, 49, 8, 375, DateTimeKind.Unspecified).AddTicks(237),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2015, 7, 17, 15, 56, 32, 700, DateTimeKind.Unspecified).AddTicks(7782),
                            Email = "Jordi_Rutherford@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Jordi",
                            IsDeleted = true,
                            Lastname = "Rutherford",
                            LockoutEnabled = false,
                            NormalizedEmail = "JORDI_RUTHERFORD@YAHOO.COM",
                            NormalizedUserName = "JORDI_RUTHERFORD",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Jordi_Rutherford"
                        },
                        new
                        {
                            Id = "2bc3f791-5ae6-4380-98f5-861397b6a9bd",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1985, 10, 3, 15, 51, 48, 814, DateTimeKind.Unspecified).AddTicks(5077),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2012, 1, 24, 18, 9, 30, 252, DateTimeKind.Unspecified).AddTicks(7400),
                            Email = "Gloria.Kozey@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Gloria",
                            IsDeleted = false,
                            Lastname = "Kozey",
                            LockoutEnabled = false,
                            NormalizedEmail = "GLORIA.KOZEY@YAHOO.COM",
                            NormalizedUserName = "GLORIA_KOZEY",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Gloria_Kozey"
                        },
                        new
                        {
                            Id = "3cc1671c-1fe9-40af-bc37-9d5b848af786",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2000, 2, 11, 22, 12, 50, 213, DateTimeKind.Unspecified).AddTicks(1524),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2011, 2, 7, 9, 7, 49, 587, DateTimeKind.Unspecified).AddTicks(5866),
                            Email = "Cecelia26@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Cecelia",
                            IsDeleted = false,
                            Lastname = "Towne",
                            LockoutEnabled = false,
                            NormalizedEmail = "CECELIA26@YAHOO.COM",
                            NormalizedUserName = "CECELIA_TOWNE",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Cecelia_Towne"
                        },
                        new
                        {
                            Id = "ae110ccb-ed7e-45cc-b707-8c376418ec85",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1982, 2, 14, 17, 28, 57, 50, DateTimeKind.Unspecified).AddTicks(2277),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2016, 6, 5, 3, 42, 38, 116, DateTimeKind.Unspecified).AddTicks(6896),
                            Email = "Brian.Barrows99@yahoo.com",
                            EmailConfirmed = false,
                            Firstname = "Brian",
                            IsDeleted = true,
                            Lastname = "Barrows",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRIAN.BARROWS99@YAHOO.COM",
                            NormalizedUserName = "BRIAN_BARROWS",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Brian_Barrows"
                        },
                        new
                        {
                            Id = "1c06c32f-9e53-4144-a286-13ddc0ae70e4",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1993, 10, 19, 14, 38, 13, 769, DateTimeKind.Unspecified).AddTicks(2146),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2015, 6, 16, 22, 37, 15, 292, DateTimeKind.Unspecified).AddTicks(6103),
                            Email = "Alessandra.Jones11@yahoo.com",
                            EmailConfirmed = false,
                            Firstname = "Alessandra",
                            IsDeleted = false,
                            Lastname = "Jones",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALESSANDRA.JONES11@YAHOO.COM",
                            NormalizedUserName = "ALESSANDRA_JONES",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Alessandra_Jones"
                        },
                        new
                        {
                            Id = "ebd178de-f3a2-4d18-8cc5-07d594f22e3e",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1973, 5, 7, 2, 21, 23, 613, DateTimeKind.Unspecified).AddTicks(4596),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2013, 3, 31, 22, 9, 43, 932, DateTimeKind.Unspecified).AddTicks(3673),
                            Email = "Vida73@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Vida",
                            IsDeleted = true,
                            Lastname = "Cremin",
                            LockoutEnabled = false,
                            NormalizedEmail = "VIDA73@HOTMAIL.COM",
                            NormalizedUserName = "VIDA_CREMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Vida_Cremin"
                        },
                        new
                        {
                            Id = "5f5a3af0-61e4-4289-b6c1-15542204c249",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1995, 8, 4, 7, 22, 14, 237, DateTimeKind.Unspecified).AddTicks(9722),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2010, 4, 18, 13, 53, 55, 789, DateTimeKind.Unspecified).AddTicks(912),
                            Email = "Anissa.Cruickshank@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Anissa",
                            IsDeleted = false,
                            Lastname = "Cruickshank",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANISSA.CRUICKSHANK@YAHOO.COM",
                            NormalizedUserName = "ANISSA_CRUICKSHANK",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Anissa_Cruickshank"
                        },
                        new
                        {
                            Id = "99b3115f-c93d-4b1a-a940-db6ee9057cb6",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1965, 12, 16, 4, 48, 39, 76, DateTimeKind.Unspecified).AddTicks(9217),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2015, 10, 31, 6, 57, 27, 190, DateTimeKind.Unspecified).AddTicks(3310),
                            Email = "Joey60@yahoo.com",
                            EmailConfirmed = false,
                            Firstname = "Joey",
                            IsDeleted = false,
                            Lastname = "Ward",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOEY60@YAHOO.COM",
                            NormalizedUserName = "JOEY_WARD",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Joey_Ward"
                        },
                        new
                        {
                            Id = "a77a3b36-c3f4-4355-a388-4dd7ae96e6ea",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(2000, 9, 10, 17, 48, 25, 857, DateTimeKind.Unspecified).AddTicks(8624),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2015, 10, 16, 5, 20, 34, 909, DateTimeKind.Unspecified).AddTicks(1664),
                            Email = "Oceane_Hauck80@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Oceane",
                            IsDeleted = true,
                            Lastname = "Hauck",
                            LockoutEnabled = false,
                            NormalizedEmail = "OCEANE_HAUCK80@YAHOO.COM",
                            NormalizedUserName = "OCEANE_HAUCK",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Oceane_Hauck"
                        },
                        new
                        {
                            Id = "48b69414-5fa3-4919-ae68-8c9dd2b5294a",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1997, 10, 1, 4, 52, 19, 838, DateTimeKind.Unspecified).AddTicks(2228),
                            ConcurrencyStamp = "efc45564-59cd-4bcc-a3cd-265b3cb5b6ce",
                            CreationDate = new DateTime(2017, 6, 16, 5, 45, 4, 898, DateTimeKind.Unspecified).AddTicks(5348),
                            Email = "Elmer.Metz61@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Elmer",
                            IsDeleted = false,
                            Lastname = "Metz",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELMER.METZ61@GMAIL.COM",
                            NormalizedUserName = "ELMER_METZ",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "Bogus.DataSets.PhoneNumbers",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Elmer_Metz"
                        });
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "2550335c-068d-491a-ae46-8b0064199ea1",
                            RoleId = "642e7f53-0381-4651-833b-f0d9d53d0e4d"
                        },
                        new
                        {
                            UserId = "3e5ab3a2-b627-437a-a13b-6b5cf131c911",
                            RoleId = "642e7f53-0381-4651-833b-f0d9d53d0e4d"
                        },
                        new
                        {
                            UserId = "964dd0dc-31cc-4a0a-b4a5-cdbb06893899",
                            RoleId = "642e7f53-0381-4651-833b-f0d9d53d0e4d"
                        },
                        new
                        {
                            UserId = "f7bc439c-8551-45fd-aba9-7d99b4219f36",
                            RoleId = "3589c061-1c60-43ff-ae06-5da838058dee"
                        },
                        new
                        {
                            UserId = "cf33fd83-c484-4fb4-9b73-a85c2a20e232",
                            RoleId = "3589c061-1c60-43ff-ae06-5da838058dee"
                        },
                        new
                        {
                            UserId = "c0dfc08e-a6d1-4700-9784-c60d8f1efdbb",
                            RoleId = "4ded5da6-4674-41cf-a83c-74fe04d869bb"
                        },
                        new
                        {
                            UserId = "5695cd4b-9832-4fab-8eef-497cb93bec68",
                            RoleId = "3f5e5a7f-cff6-49a8-b615-9391572b313c"
                        },
                        new
                        {
                            UserId = "f1e6b85f-1dab-4efa-b735-71bdf38963e0",
                            RoleId = "4ded5da6-4674-41cf-a83c-74fe04d869bb"
                        },
                        new
                        {
                            UserId = "4382aafd-e084-4889-b4d4-23224fdd8cf0",
                            RoleId = "3f5e5a7f-cff6-49a8-b615-9391572b313c"
                        },
                        new
                        {
                            UserId = "085f3d5f-7d3e-4500-8709-400c19fd5810",
                            RoleId = "3f5e5a7f-cff6-49a8-b615-9391572b313c"
                        },
                        new
                        {
                            UserId = "ca500cf5-44ba-4cc0-85c7-58dd000c252a",
                            RoleId = "3589c061-1c60-43ff-ae06-5da838058dee"
                        },
                        new
                        {
                            UserId = "2bc3f791-5ae6-4380-98f5-861397b6a9bd",
                            RoleId = "3f5e5a7f-cff6-49a8-b615-9391572b313c"
                        },
                        new
                        {
                            UserId = "3cc1671c-1fe9-40af-bc37-9d5b848af786",
                            RoleId = "3589c061-1c60-43ff-ae06-5da838058dee"
                        },
                        new
                        {
                            UserId = "ae110ccb-ed7e-45cc-b707-8c376418ec85",
                            RoleId = "3f5e5a7f-cff6-49a8-b615-9391572b313c"
                        },
                        new
                        {
                            UserId = "1c06c32f-9e53-4144-a286-13ddc0ae70e4",
                            RoleId = "3589c061-1c60-43ff-ae06-5da838058dee"
                        },
                        new
                        {
                            UserId = "ebd178de-f3a2-4d18-8cc5-07d594f22e3e",
                            RoleId = "642e7f53-0381-4651-833b-f0d9d53d0e4d"
                        },
                        new
                        {
                            UserId = "5f5a3af0-61e4-4289-b6c1-15542204c249",
                            RoleId = "642e7f53-0381-4651-833b-f0d9d53d0e4d"
                        },
                        new
                        {
                            UserId = "99b3115f-c93d-4b1a-a940-db6ee9057cb6",
                            RoleId = "3f5e5a7f-cff6-49a8-b615-9391572b313c"
                        },
                        new
                        {
                            UserId = "a77a3b36-c3f4-4355-a388-4dd7ae96e6ea",
                            RoleId = "642e7f53-0381-4651-833b-f0d9d53d0e4d"
                        },
                        new
                        {
                            UserId = "48b69414-5fa3-4919-ae68-8c9dd2b5294a",
                            RoleId = "4ded5da6-4674-41cf-a83c-74fe04d869bb"
                        });
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RefreshToken", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RoleClaim", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.Role", "Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserClaim", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserLogin", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserRole", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.Role", "Role")
                        .WithMany("Roles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserToken", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.Role", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Roles");

                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
