// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PaperSquare.Data.Data;

#nullable disable

namespace PaperSquare.Data.Migrations
{
    [DbContext(typeof(PaperSquareDbContext))]
    partial class PaperSquareDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RefreshToken", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("Expires")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsValid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false);

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("RefreshToken", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.Role", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex");

                    b.ToTable("Role", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "4a2b8180-45a0-4e10-89b6-3b05d0bd24d3",
                            ConcurrencyStamp = "0927d8c6-497b-465f-99de-ed4d9b087b6f",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "185bee48-25e7-49a8-8e4d-9764d76b2347",
                            ConcurrencyStamp = "80f14719-acd3-487f-a17a-3e97db092127",
                            Name = "RegisteredUser",
                            NormalizedName = "REGISTEREDUSER"
                        },
                        new
                        {
                            Id = "7ac91a34-fe1c-40f3-bbff-cd0398babd7e",
                            ConcurrencyStamp = "e06a2d1d-8234-4496-a2c0-fa5f3dc48264",
                            Name = "Editor",
                            NormalizedName = "EDITOR"
                        },
                        new
                        {
                            Id = "725aa7b5-55e2-43c7-b6da-d7145034fa1e",
                            ConcurrencyStamp = "74558331-fe58-4274-bc55-9589cba71030",
                            Name = "Guest",
                            NormalizedName = "GUEST"
                        });
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RoleClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaim", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOnUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("Firstname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastModifiedOnUtc")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("character varying(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "18676753-b673-40ae-ac7f-6a6ddd5613d3",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1980, 1, 5, 0, 39, 58, 328, DateTimeKind.Unspecified).AddTicks(6962),
                            ConcurrencyStamp = "819675bb-aee5-4e97-b221-b0daf17c9992",
                            CreatedBy = "18676753-b673-40ae-ac7f-6a6ddd5613d3",
                            CreatedOnUtc = new DateTime(2015, 4, 8, 21, 44, 49, 889, DateTimeKind.Unspecified).AddTicks(1860),
                            Email = "Tressie.Koelpin@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Tressie",
                            IsDeleted = false,
                            Lastname = "Koelpin",
                            LockoutEnabled = false,
                            NormalizedEmail = "TRESSIE.KOELPIN@YAHOO.COM",
                            NormalizedUserName = "TRESSIE_KOELPIN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "451-908-1307 x62474",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Tressie_Koelpin"
                        },
                        new
                        {
                            Id = "2afa61a5-be9e-4990-a674-7f43e3086205",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1999, 5, 9, 8, 47, 0, 429, DateTimeKind.Unspecified).AddTicks(4748),
                            ConcurrencyStamp = "7b17067c-dd61-43ec-ae38-d712641ca617",
                            CreatedBy = "2afa61a5-be9e-4990-a674-7f43e3086205",
                            CreatedOnUtc = new DateTime(2010, 2, 21, 19, 48, 58, 595, DateTimeKind.Unspecified).AddTicks(6249),
                            Email = "Lorenz_Jast32@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Lorenz",
                            IsDeleted = false,
                            Lastname = "Jast",
                            LockoutEnabled = false,
                            NormalizedEmail = "LORENZ_JAST32@HOTMAIL.COM",
                            NormalizedUserName = "LORENZ_JAST",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "347.739.9578 x2930",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Lorenz_Jast"
                        },
                        new
                        {
                            Id = "84b81c0d-16cd-4d89-8d2d-dd2b10a5fac5",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1980, 3, 21, 23, 10, 40, 634, DateTimeKind.Unspecified).AddTicks(731),
                            ConcurrencyStamp = "de37e744-62e0-4517-8914-a34a6f1855ac",
                            CreatedBy = "84b81c0d-16cd-4d89-8d2d-dd2b10a5fac5",
                            CreatedOnUtc = new DateTime(2016, 4, 29, 20, 39, 21, 567, DateTimeKind.Unspecified).AddTicks(693),
                            Email = "Laurie.Stokes@gmail.com",
                            EmailConfirmed = false,
                            Firstname = "Laurie",
                            IsDeleted = false,
                            Lastname = "Stokes",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAURIE.STOKES@GMAIL.COM",
                            NormalizedUserName = "LAURIE_STOKES",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "(475) 464-3766",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Laurie_Stokes"
                        },
                        new
                        {
                            Id = "8f6d985b-f0e2-42ec-b9f1-3e7b58ae89fb",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1982, 9, 3, 9, 31, 25, 771, DateTimeKind.Unspecified).AddTicks(4212),
                            ConcurrencyStamp = "03b3b0d1-2565-4879-9170-1b757a09c109",
                            CreatedBy = "8f6d985b-f0e2-42ec-b9f1-3e7b58ae89fb",
                            CreatedOnUtc = new DateTime(2017, 9, 22, 14, 41, 47, 550, DateTimeKind.Unspecified).AddTicks(6258),
                            Email = "Seamus.Tillman@gmail.com",
                            EmailConfirmed = false,
                            Firstname = "Seamus",
                            IsDeleted = true,
                            Lastname = "Tillman",
                            LockoutEnabled = false,
                            NormalizedEmail = "SEAMUS.TILLMAN@GMAIL.COM",
                            NormalizedUserName = "SEAMUS_TILLMAN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "755-932-3708 x219",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Seamus_Tillman"
                        },
                        new
                        {
                            Id = "761d6858-ea3b-420f-bbc5-cd72c60d7319",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1982, 11, 21, 18, 40, 36, 407, DateTimeKind.Unspecified).AddTicks(8046),
                            ConcurrencyStamp = "4bc760d2-09d4-42db-a656-4381a965f666",
                            CreatedBy = "761d6858-ea3b-420f-bbc5-cd72c60d7319",
                            CreatedOnUtc = new DateTime(2013, 1, 24, 5, 26, 20, 103, DateTimeKind.Unspecified).AddTicks(9236),
                            Email = "Godfrey_Ryan21@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Godfrey",
                            IsDeleted = false,
                            Lastname = "Ryan",
                            LockoutEnabled = false,
                            NormalizedEmail = "GODFREY_RYAN21@GMAIL.COM",
                            NormalizedUserName = "GODFREY_RYAN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "1-743-894-2795",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Godfrey_Ryan"
                        },
                        new
                        {
                            Id = "866f9e09-c4d5-4dd1-b463-1af21a96d2ff",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1979, 8, 22, 18, 9, 27, 106, DateTimeKind.Unspecified).AddTicks(7970),
                            ConcurrencyStamp = "77a2fdb6-6ec2-471d-bb31-35919f93951a",
                            CreatedBy = "866f9e09-c4d5-4dd1-b463-1af21a96d2ff",
                            CreatedOnUtc = new DateTime(2014, 10, 16, 4, 8, 57, 118, DateTimeKind.Unspecified).AddTicks(185),
                            Email = "Gregory_Russel3@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Gregory",
                            IsDeleted = false,
                            Lastname = "Russel",
                            LockoutEnabled = false,
                            NormalizedEmail = "GREGORY_RUSSEL3@YAHOO.COM",
                            NormalizedUserName = "GREGORY_RUSSEL",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "1-216-599-3125",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Gregory_Russel"
                        },
                        new
                        {
                            Id = "98f3cdca-4230-4e42-a014-2b29091d5b68",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1991, 4, 14, 13, 44, 13, 674, DateTimeKind.Unspecified).AddTicks(6764),
                            ConcurrencyStamp = "261f29d5-763c-49b6-a4a7-32aaf414bb03",
                            CreatedBy = "98f3cdca-4230-4e42-a014-2b29091d5b68",
                            CreatedOnUtc = new DateTime(2018, 1, 2, 23, 6, 51, 418, DateTimeKind.Unspecified).AddTicks(256),
                            Email = "Narciso.Greenholt14@hotmail.com",
                            EmailConfirmed = true,
                            Firstname = "Narciso",
                            IsDeleted = false,
                            Lastname = "Greenholt",
                            LockoutEnabled = false,
                            NormalizedEmail = "NARCISO.GREENHOLT14@HOTMAIL.COM",
                            NormalizedUserName = "NARCISO_GREENHOLT",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "200.390.8109",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Narciso_Greenholt"
                        },
                        new
                        {
                            Id = "64d3a57c-5406-4c97-8879-33106d72c252",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1979, 4, 26, 23, 22, 6, 337, DateTimeKind.Unspecified).AddTicks(2684),
                            ConcurrencyStamp = "617bda41-a64e-4f87-871b-371243cd6ecf",
                            CreatedBy = "64d3a57c-5406-4c97-8879-33106d72c252",
                            CreatedOnUtc = new DateTime(2017, 4, 22, 16, 29, 24, 924, DateTimeKind.Unspecified).AddTicks(4986),
                            Email = "Kirk.Kozey@gmail.com",
                            EmailConfirmed = false,
                            Firstname = "Kirk",
                            IsDeleted = true,
                            Lastname = "Kozey",
                            LockoutEnabled = false,
                            NormalizedEmail = "KIRK.KOZEY@GMAIL.COM",
                            NormalizedUserName = "KIRK_KOZEY",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "(923) 734-7096 x794",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Kirk_Kozey"
                        },
                        new
                        {
                            Id = "c0d55b02-9c55-46ba-afd8-3a54a997a8eb",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1989, 11, 23, 6, 28, 0, 865, DateTimeKind.Unspecified).AddTicks(1418),
                            ConcurrencyStamp = "3d8eb46e-5750-4a28-8eb8-b6b8d922d920",
                            CreatedBy = "c0d55b02-9c55-46ba-afd8-3a54a997a8eb",
                            CreatedOnUtc = new DateTime(2015, 9, 26, 21, 20, 5, 95, DateTimeKind.Unspecified).AddTicks(5965),
                            Email = "Tillman48@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Tillman",
                            IsDeleted = false,
                            Lastname = "Bednar",
                            LockoutEnabled = false,
                            NormalizedEmail = "TILLMAN48@HOTMAIL.COM",
                            NormalizedUserName = "TILLMAN_BEDNAR",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "301-842-9546",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Tillman_Bednar"
                        },
                        new
                        {
                            Id = "00be9f04-6a57-4660-a5fc-0fa38bc29a25",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1986, 11, 2, 12, 15, 21, 69, DateTimeKind.Unspecified).AddTicks(2931),
                            ConcurrencyStamp = "df8952c3-a89f-4b60-81b5-c172089eab43",
                            CreatedBy = "00be9f04-6a57-4660-a5fc-0fa38bc29a25",
                            CreatedOnUtc = new DateTime(2019, 8, 24, 11, 28, 3, 681, DateTimeKind.Unspecified).AddTicks(1923),
                            Email = "Quinn_Muller30@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Quinn",
                            IsDeleted = false,
                            Lastname = "Muller",
                            LockoutEnabled = false,
                            NormalizedEmail = "QUINN_MULLER30@YAHOO.COM",
                            NormalizedUserName = "QUINN_MULLER",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "(892) 995-3907",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Quinn_Muller"
                        },
                        new
                        {
                            Id = "fa8f4aab-b715-46d2-9c17-882616769b46",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1960, 6, 1, 14, 34, 7, 929, DateTimeKind.Unspecified).AddTicks(1229),
                            ConcurrencyStamp = "7b16026c-d329-4efe-b2f7-5e5f84945ec4",
                            CreatedBy = "fa8f4aab-b715-46d2-9c17-882616769b46",
                            CreatedOnUtc = new DateTime(2012, 2, 13, 2, 40, 3, 555, DateTimeKind.Unspecified).AddTicks(2609),
                            Email = "Alda.Dooley@yahoo.com",
                            EmailConfirmed = false,
                            Firstname = "Alda",
                            IsDeleted = true,
                            Lastname = "Dooley",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALDA.DOOLEY@YAHOO.COM",
                            NormalizedUserName = "ALDA_DOOLEY",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "(416) 587-3585 x7825",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Alda_Dooley"
                        },
                        new
                        {
                            Id = "2f83e937-b2a6-4825-9797-67bc19eccf2f",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1980, 3, 29, 4, 17, 3, 612, DateTimeKind.Unspecified).AddTicks(4331),
                            ConcurrencyStamp = "7caa62fa-54a3-4727-9ff0-1464a3bc76c2",
                            CreatedBy = "2f83e937-b2a6-4825-9797-67bc19eccf2f",
                            CreatedOnUtc = new DateTime(2012, 1, 7, 23, 2, 17, 127, DateTimeKind.Unspecified).AddTicks(7511),
                            Email = "Vicente70@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Vicente",
                            IsDeleted = false,
                            Lastname = "Hermann",
                            LockoutEnabled = false,
                            NormalizedEmail = "VICENTE70@HOTMAIL.COM",
                            NormalizedUserName = "VICENTE_HERMANN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "789.873.3543 x07703",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Vicente_Hermann"
                        },
                        new
                        {
                            Id = "a4ab6114-115a-4c08-9672-950b8d7fd91d",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1976, 12, 17, 14, 19, 24, 779, DateTimeKind.Unspecified).AddTicks(5153),
                            ConcurrencyStamp = "1df66b31-be98-4eb5-8928-b2ec7a722853",
                            CreatedBy = "a4ab6114-115a-4c08-9672-950b8d7fd91d",
                            CreatedOnUtc = new DateTime(2012, 3, 16, 18, 50, 11, 608, DateTimeKind.Unspecified).AddTicks(8171),
                            Email = "Thomas.Casper31@hotmail.com",
                            EmailConfirmed = true,
                            Firstname = "Thomas",
                            IsDeleted = true,
                            Lastname = "Casper",
                            LockoutEnabled = false,
                            NormalizedEmail = "THOMAS.CASPER31@HOTMAIL.COM",
                            NormalizedUserName = "THOMAS_CASPER",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "1-740-252-6607 x63056",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Thomas_Casper"
                        },
                        new
                        {
                            Id = "e09844ec-0d11-441e-8021-d3cbe4d21bbc",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1986, 1, 9, 3, 7, 33, 863, DateTimeKind.Unspecified).AddTicks(8434),
                            ConcurrencyStamp = "2b1ffe61-361f-418c-91eb-c28120ecb1f5",
                            CreatedBy = "e09844ec-0d11-441e-8021-d3cbe4d21bbc",
                            CreatedOnUtc = new DateTime(2018, 11, 2, 23, 39, 59, 170, DateTimeKind.Unspecified).AddTicks(2258),
                            Email = "Raphaelle_Blick@gmail.com",
                            EmailConfirmed = false,
                            Firstname = "Raphaelle",
                            IsDeleted = true,
                            Lastname = "Blick",
                            LockoutEnabled = false,
                            NormalizedEmail = "RAPHAELLE_BLICK@GMAIL.COM",
                            NormalizedUserName = "RAPHAELLE_BLICK",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "864.571.4257",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Raphaelle_Blick"
                        },
                        new
                        {
                            Id = "e5ef12ab-1f71-44a1-873a-6646b9c13091",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1962, 7, 14, 23, 43, 50, 794, DateTimeKind.Unspecified).AddTicks(4390),
                            ConcurrencyStamp = "84f07b8d-25cd-47c5-af06-8e6ffeee5ca7",
                            CreatedBy = "e5ef12ab-1f71-44a1-873a-6646b9c13091",
                            CreatedOnUtc = new DateTime(2015, 8, 12, 22, 27, 10, 376, DateTimeKind.Unspecified).AddTicks(2270),
                            Email = "Art74@yahoo.com",
                            EmailConfirmed = true,
                            Firstname = "Art",
                            IsDeleted = false,
                            Lastname = "Kilback",
                            LockoutEnabled = false,
                            NormalizedEmail = "ART74@YAHOO.COM",
                            NormalizedUserName = "ART_KILBACK",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "1-761-555-7579 x0384",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Art_Kilback"
                        },
                        new
                        {
                            Id = "b31ce142-2ace-489e-a39a-360f193ee8da",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1964, 5, 4, 7, 2, 5, 82, DateTimeKind.Unspecified).AddTicks(9749),
                            ConcurrencyStamp = "d20951f5-70d0-4b7c-bb10-a1fc98fd22d1",
                            CreatedBy = "b31ce142-2ace-489e-a39a-360f193ee8da",
                            CreatedOnUtc = new DateTime(2016, 4, 25, 7, 44, 43, 584, DateTimeKind.Unspecified).AddTicks(9476),
                            Email = "Danika25@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Danika",
                            IsDeleted = true,
                            Lastname = "Parker",
                            LockoutEnabled = false,
                            NormalizedEmail = "DANIKA25@HOTMAIL.COM",
                            NormalizedUserName = "DANIKA_PARKER",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "810.756.4778 x963",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Danika_Parker"
                        },
                        new
                        {
                            Id = "52dfcc62-0bc5-4ec6-b3a3-06b6447d6c6e",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1961, 10, 22, 12, 53, 59, 850, DateTimeKind.Unspecified).AddTicks(9066),
                            ConcurrencyStamp = "faad7601-960c-4c55-985b-87015d47cc41",
                            CreatedBy = "52dfcc62-0bc5-4ec6-b3a3-06b6447d6c6e",
                            CreatedOnUtc = new DateTime(2015, 3, 6, 11, 59, 26, 698, DateTimeKind.Unspecified).AddTicks(6345),
                            Email = "Laverne9@gmail.com",
                            EmailConfirmed = true,
                            Firstname = "Laverne",
                            IsDeleted = false,
                            Lastname = "Lang",
                            LockoutEnabled = false,
                            NormalizedEmail = "LAVERNE9@GMAIL.COM",
                            NormalizedUserName = "LAVERNE_LANG",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "528.695.1084 x53621",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Laverne_Lang"
                        },
                        new
                        {
                            Id = "202d843a-6a9a-4c96-893e-762a11756399",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1972, 2, 29, 7, 36, 37, 248, DateTimeKind.Unspecified).AddTicks(770),
                            ConcurrencyStamp = "84626275-0eaf-4018-b012-40aa6b3a0b75",
                            CreatedBy = "202d843a-6a9a-4c96-893e-762a11756399",
                            CreatedOnUtc = new DateTime(2012, 8, 7, 9, 51, 27, 428, DateTimeKind.Unspecified).AddTicks(6222),
                            Email = "Leda.Hettinger67@gmail.com",
                            EmailConfirmed = false,
                            Firstname = "Leda",
                            IsDeleted = false,
                            Lastname = "Hettinger",
                            LockoutEnabled = false,
                            NormalizedEmail = "LEDA.HETTINGER67@GMAIL.COM",
                            NormalizedUserName = "LEDA_HETTINGER",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "924-498-7012 x827",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Leda_Hettinger"
                        },
                        new
                        {
                            Id = "c850f80a-9226-44ed-8880-a8bace6c43ab",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1979, 7, 22, 20, 48, 36, 969, DateTimeKind.Unspecified).AddTicks(2761),
                            ConcurrencyStamp = "f1d51ff1-be5a-422c-8dc0-ab3f616632a8",
                            CreatedBy = "c850f80a-9226-44ed-8880-a8bace6c43ab",
                            CreatedOnUtc = new DateTime(2018, 8, 10, 21, 40, 51, 795, DateTimeKind.Unspecified).AddTicks(4098),
                            Email = "Zane_Schulist@yahoo.com",
                            EmailConfirmed = false,
                            Firstname = "Zane",
                            IsDeleted = false,
                            Lastname = "Schulist",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZANE_SCHULIST@YAHOO.COM",
                            NormalizedUserName = "ZANE_SCHULIST",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "(332) 478-6802 x2135",
                            PhoneNumberConfirmed = true,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Zane_Schulist"
                        },
                        new
                        {
                            Id = "06eae39b-2ea3-49e1-8146-994494849ba4",
                            AccessFailedCount = 0,
                            BirthDate = new DateTime(1995, 5, 23, 19, 21, 19, 884, DateTimeKind.Unspecified).AddTicks(186),
                            ConcurrencyStamp = "37e2317f-f8dc-4b5c-8bfe-75117d362820",
                            CreatedBy = "06eae39b-2ea3-49e1-8146-994494849ba4",
                            CreatedOnUtc = new DateTime(2012, 9, 27, 14, 47, 4, 185, DateTimeKind.Unspecified).AddTicks(6192),
                            Email = "Geovanni_Champlin@hotmail.com",
                            EmailConfirmed = false,
                            Firstname = "Geovanni",
                            IsDeleted = true,
                            Lastname = "Champlin",
                            LockoutEnabled = false,
                            NormalizedEmail = "GEOVANNI_CHAMPLIN@HOTMAIL.COM",
                            NormalizedUserName = "GEOVANNI_CHAMPLIN",
                            PasswordHash = "AQAAAAEAACcQAAAAECKfk8fF5yZ4plu8y1vPtzMs/u8dlOOq0zuPKb1uKKDKRuxUFhSb2HUaBFLUEYe0EA==",
                            PhoneNumber = "801-687-1293",
                            PhoneNumberConfirmed = false,
                            SecurityStamp = "VJWEG644FKWZHWEQSDTECNTWRMOX3YFN",
                            TwoFactorEnabled = false,
                            UserName = "Geovanni_Champlin"
                        });
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserClaim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("text");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaim", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserLogin", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("text");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("text");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogin", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserRole", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("RoleId")
                        .HasColumnType("text");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRole", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = "18676753-b673-40ae-ac7f-6a6ddd5613d3",
                            RoleId = "725aa7b5-55e2-43c7-b6da-d7145034fa1e"
                        },
                        new
                        {
                            UserId = "2afa61a5-be9e-4990-a674-7f43e3086205",
                            RoleId = "4a2b8180-45a0-4e10-89b6-3b05d0bd24d3"
                        },
                        new
                        {
                            UserId = "84b81c0d-16cd-4d89-8d2d-dd2b10a5fac5",
                            RoleId = "185bee48-25e7-49a8-8e4d-9764d76b2347"
                        },
                        new
                        {
                            UserId = "8f6d985b-f0e2-42ec-b9f1-3e7b58ae89fb",
                            RoleId = "185bee48-25e7-49a8-8e4d-9764d76b2347"
                        },
                        new
                        {
                            UserId = "761d6858-ea3b-420f-bbc5-cd72c60d7319",
                            RoleId = "4a2b8180-45a0-4e10-89b6-3b05d0bd24d3"
                        },
                        new
                        {
                            UserId = "866f9e09-c4d5-4dd1-b463-1af21a96d2ff",
                            RoleId = "4a2b8180-45a0-4e10-89b6-3b05d0bd24d3"
                        },
                        new
                        {
                            UserId = "98f3cdca-4230-4e42-a014-2b29091d5b68",
                            RoleId = "185bee48-25e7-49a8-8e4d-9764d76b2347"
                        },
                        new
                        {
                            UserId = "64d3a57c-5406-4c97-8879-33106d72c252",
                            RoleId = "185bee48-25e7-49a8-8e4d-9764d76b2347"
                        },
                        new
                        {
                            UserId = "c0d55b02-9c55-46ba-afd8-3a54a997a8eb",
                            RoleId = "185bee48-25e7-49a8-8e4d-9764d76b2347"
                        },
                        new
                        {
                            UserId = "00be9f04-6a57-4660-a5fc-0fa38bc29a25",
                            RoleId = "7ac91a34-fe1c-40f3-bbff-cd0398babd7e"
                        },
                        new
                        {
                            UserId = "fa8f4aab-b715-46d2-9c17-882616769b46",
                            RoleId = "725aa7b5-55e2-43c7-b6da-d7145034fa1e"
                        },
                        new
                        {
                            UserId = "2f83e937-b2a6-4825-9797-67bc19eccf2f",
                            RoleId = "185bee48-25e7-49a8-8e4d-9764d76b2347"
                        },
                        new
                        {
                            UserId = "a4ab6114-115a-4c08-9672-950b8d7fd91d",
                            RoleId = "4a2b8180-45a0-4e10-89b6-3b05d0bd24d3"
                        },
                        new
                        {
                            UserId = "e09844ec-0d11-441e-8021-d3cbe4d21bbc",
                            RoleId = "185bee48-25e7-49a8-8e4d-9764d76b2347"
                        },
                        new
                        {
                            UserId = "e5ef12ab-1f71-44a1-873a-6646b9c13091",
                            RoleId = "7ac91a34-fe1c-40f3-bbff-cd0398babd7e"
                        },
                        new
                        {
                            UserId = "b31ce142-2ace-489e-a39a-360f193ee8da",
                            RoleId = "4a2b8180-45a0-4e10-89b6-3b05d0bd24d3"
                        },
                        new
                        {
                            UserId = "52dfcc62-0bc5-4ec6-b3a3-06b6447d6c6e",
                            RoleId = "7ac91a34-fe1c-40f3-bbff-cd0398babd7e"
                        },
                        new
                        {
                            UserId = "202d843a-6a9a-4c96-893e-762a11756399",
                            RoleId = "725aa7b5-55e2-43c7-b6da-d7145034fa1e"
                        },
                        new
                        {
                            UserId = "c850f80a-9226-44ed-8880-a8bace6c43ab",
                            RoleId = "7ac91a34-fe1c-40f3-bbff-cd0398babd7e"
                        },
                        new
                        {
                            UserId = "06eae39b-2ea3-49e1-8146-994494849ba4",
                            RoleId = "7ac91a34-fe1c-40f3-bbff-cd0398babd7e"
                        });
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserToken", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("text");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Value")
                        .HasColumnType("text");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserToken", (string)null);
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RefreshToken", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("RefreshTokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.RoleClaim", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.Role", "Role")
                        .WithMany("Claims")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserClaim", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Claims")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserLogin", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Logins")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserRole", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.Role", "Role")
                        .WithMany("Roles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.UserToken", b =>
                {
                    b.HasOne("PaperSquare.Core.Models.Identity.User", "User")
                        .WithMany("Tokens")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.Role", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("PaperSquare.Core.Models.Identity.User", b =>
                {
                    b.Navigation("Claims");

                    b.Navigation("Logins");

                    b.Navigation("RefreshTokens");

                    b.Navigation("Roles");

                    b.Navigation("Tokens");
                });
#pragma warning restore 612, 618
        }
    }
}
